{"version":3,"sources":["context/mockData.js/mockUser.js","context/mockData.js/mockRepos.js","context/mockData.js/mockFollowers.js","context/context.js","components/Info.js","components/Charts/Column3D.js","components/Charts/Bar3D.js","components/Charts/Pie3D.js","components/Charts/Doughnut2d.js","components/Repos.js","components/Card.js","components/Followers.js","components/User.js","components/Search.js","components/Navbar.js","pages/Dashboard.js","images/Loading.gif","pages/Error.js","App.js","serviceWorker.js","index.js"],"names":["mockUser","login","id","node_id","avatar_url","gravatar_id","url","html_url","followers_url","following_url","gists_url","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","type","site_admin","name","company","blog","location","email","hireable","bio","twitter_username","public_repos","public_gists","followers","following","created_at","updated_at","mockRepos","full_name","private","owner","description","fork","forks_url","keys_url","collaborators_url","teams_url","hooks_url","issue_events_url","assignees_url","branches_url","tags_url","blobs_url","git_tags_url","git_refs_url","trees_url","statuses_url","languages_url","stargazers_url","contributors_url","subscribers_url","subscription_url","commits_url","git_commits_url","comments_url","issue_comment_url","contents_url","compare_url","merges_url","archive_url","downloads_url","issues_url","pulls_url","milestones_url","notifications_url","labels_url","releases_url","deployments_url","pushed_at","git_url","ssh_url","clone_url","svn_url","homepage","size","stargazers_count","watchers_count","language","has_issues","has_projects","has_downloads","has_wiki","has_pages","forks_count","mirror_url","archived","disabled","open_issues_count","license","forks","open_issues","watchers","default_branch","mockFollowers","rootUrl","GithubContext","React","createContext","GithubProvider","children","useState","githubUser","setGithubUser","repos","setRepos","setFollowers","requests","setRequests","isLoading","setIsLoading","show","msg","error","setError","chartColor","setChartColor","chartFontColor","setChartFontColor","searchGithubUser","user","a","toggleError","axios","catch","err","console","log","response","data","sessionStorage","setItem","Promise","allSettled","then","results","status","value","checkRequests","remaining","rate","fetchUser","useEffect","username","getItem","defaultUser","Provider","Item","icon","label","color","className","Wrapper","styled","section","UserInfo","useContext","items","map","item","key","ReactFC","fcRoot","FusionCharts","Chart","FusionTheme","ChartComponent","chartConfigs","width","height","dataFormat","dataSource","chart","caption","captionFontColor","yAxisName","xAxisName","xAxisNameFontSize","yAxisNameFontSize","theme","bgColor","paletteColors","doughnutRadius","showPercentValues","valueFontColor","div","Repos","languages","reduce","total","stars","mostUsed","Object","values","sort","b","slice","mostPopular","reverse","Column3D","Bar3D","article","Card","src","alt","href","target","rel","Followers","follower","index","img","User","ErrorWrapper","Search","setUser","onSubmit","e","preventDefault","placeholder","onChange","Navbar","toggleTheme","Dashboard","Info","App","loading","setloading","setTimeout","setTheme","document","documentElement","radius","margin","path","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qOAqCeA,EArCE,CACfC,MAAO,YACPC,GAAI,SACJC,QAAS,uBACTC,WACE,wGACFC,YAAa,GACbC,IAAK,yCACLC,SAAU,+BACVC,cAAe,mDACfC,cACE,gEACFC,UAAW,yDACXC,YAAa,gEACbC,kBAAmB,uDACnBC,kBAAmB,8CACnBC,UAAW,+CACXC,WAAY,0DACZC,oBAAqB,yDACrBC,KAAM,OACNC,YAAY,EACZC,KAAM,eACNC,QAAS,KACTC,KAAM,GACNC,SAAU,KACVC,MAAO,KACPC,SAAU,KACVC,IAAK,KACLC,iBAAkB,kBAClBC,aAAc,EACdC,aAAc,EACdC,UAAW,EACXC,UAAW,EACXC,WAAY,uBACZC,WAAY,wBC0VCC,EA5XG,CAChB,CACE/B,GAAI,UACJC,QAAS,mCACTgB,KAAM,kBACNe,UAAW,4BACXC,SAAS,EACTC,MAAO,CACLnC,MAAO,YACPC,GAAI,SACJC,QAAS,uBACTC,WACE,wGACFC,YAAa,GACbC,IAAK,yCACLC,SAAU,+BACVC,cAAe,mDACfC,cACE,gEACFC,UAAW,yDACXC,YACE,gEACFC,kBAAmB,uDACnBC,kBAAmB,8CACnBC,UAAW,+CACXC,WAAY,0DACZC,oBACE,yDACFC,KAAM,OACNC,YAAY,GAEdX,SAAU,+CACV8B,YAAa,KACbC,MAAM,EACNhC,IAAK,yDACLiC,UAAW,+DACXC,SACE,uEACFC,kBACE,sFACFC,UAAW,+DACXC,UAAW,+DACXC,iBACE,gFACF7B,WAAY,gEACZ8B,cACE,0EACFC,aACE,2EACFC,SAAU,8DACVC,UACE,yEACFC,aACE,wEACFC,aACE,wEACFC,UACE,yEACFC,aACE,wEACFC,cACE,mEACFC,eACE,oEACFC,iBACE,sEACFC,gBACE,qEACFC,iBACE,sEACFC,YACE,uEACFC,gBACE,2EACFC,aACE,2EACFC,kBACE,kFACFC,aACE,0EACFC,YACE,iFACFC,WAAY,gEACZC,YACE,gFACFC,cACE,mEACFC,WACE,yEACFC,UACE,wEACFC,eACE,6EACFC,kBACE,iGACFC,WACE,uEACFC,aACE,uEACFC,gBACE,qEACF1C,WAAY,uBACZC,WAAY,uBACZ0C,UAAW,uBACXC,QAAS,iDACTC,QAAS,+CACTC,UAAW,mDACXC,QAAS,+CACTC,SAAU,KACVC,KAAM,IACNC,iBAAkB,EAClBC,eAAgB,EAChBC,SAAU,MACVC,YAAY,EACZC,cAAc,EACdC,eAAe,EACfC,UAAU,EACVC,WAAW,EACXC,YAAa,EACbC,WAAY,KACZC,UAAU,EACVC,UAAU,EACVC,kBAAmB,EACnBC,QAAS,KACTC,MAAO,EACPC,YAAa,EACbC,SAAU,EACVC,eAAgB,QAElB,CACEhG,GAAI,UACJC,QAAS,mCACTgB,KAAM,WACNe,UAAW,qBACXC,SAAS,EACTC,MAAO,CACLnC,MAAO,YACPC,GAAI,SACJC,QAAS,uBACTC,WAAY,wDACZC,YAAa,GACbC,IAAK,yCACLC,SAAU,+BACVC,cAAe,mDACfC,cACE,gEACFC,UAAW,yDACXC,YACE,gEACFC,kBAAmB,uDACnBC,kBAAmB,8CACnBC,UAAW,+CACXC,WAAY,0DACZC,oBACE,yDACFC,KAAM,OACNC,YAAY,GAEdX,SAAU,wCACV8B,YAAa,KACbC,MAAM,EACNhC,IAAK,kDACLiC,UAAW,wDACXC,SAAU,gEACVC,kBACE,+EACFC,UAAW,wDACXC,UAAW,wDACXC,iBACE,yEACF7B,WAAY,yDACZ8B,cACE,mEACFC,aACE,oEACFC,SAAU,uDACVC,UACE,kEACFC,aACE,iEACFC,aACE,iEACFC,UACE,kEACFC,aACE,iEACFC,cAAe,4DACfC,eACE,6DACFC,iBACE,+DACFC,gBACE,8DACFC,iBACE,+DACFC,YACE,gEACFC,gBACE,oEACFC,aACE,oEACFC,kBACE,2EACFC,aACE,mEACFC,YACE,0EACFC,WAAY,yDACZC,YACE,yEACFC,cAAe,4DACfC,WACE,kEACFC,UAAW,iEACXC,eACE,sEACFC,kBACE,0FACFC,WAAY,gEACZC,aACE,gEACFC,gBACE,8DACF1C,WAAY,uBACZC,WAAY,uBACZ0C,UAAW,uBACXC,QAAS,0CACTC,QAAS,wCACTC,UAAW,4CACXC,QAAS,wCACTC,SAAU,KACVC,KAAM,EACNC,iBAAkB,EAClBC,eAAgB,EAChBC,SAAU,KACVC,YAAY,EACZC,cAAc,EACdC,eAAe,EACfC,UAAU,EACVC,WAAW,EACXC,YAAa,EACbC,WAAY,KACZC,UAAU,EACVC,UAAU,EACVC,kBAAmB,EACnBC,QAAS,KACTC,MAAO,EACPC,YAAa,EACbC,SAAU,EACVC,eAAgB,QAElB,CACEhG,GAAI,UACJC,QAAS,mCACTgB,KAAM,cACNe,UAAW,wBACXC,SAAS,EACTC,MAAO,CACLnC,MAAO,YACPC,GAAI,SACJC,QAAS,uBACTC,WAAY,wDACZC,YAAa,GACbC,IAAK,yCACLC,SAAU,+BACVC,cAAe,mDACfC,cACE,gEACFC,UAAW,yDACXC,YACE,gEACFC,kBAAmB,uDACnBC,kBAAmB,8CACnBC,UAAW,+CACXC,WAAY,0DACZC,oBACE,yDACFC,KAAM,OACNC,YAAY,GAEdX,SAAU,2CACV8B,YAAa,KACbC,MAAM,EACNhC,IAAK,qDACLiC,UAAW,2DACXC,SACE,mEACFC,kBACE,kFACFC,UAAW,2DACXC,UAAW,2DACXC,iBACE,4EACF7B,WAAY,4DACZ8B,cACE,sEACFC,aACE,uEACFC,SAAU,0DACVC,UACE,qEACFC,aACE,oEACFC,aACE,oEACFC,UACE,qEACFC,aACE,oEACFC,cACE,+DACFC,eACE,gEACFC,iBACE,kEACFC,gBACE,iEACFC,iBACE,kEACFC,YACE,mEACFC,gBACE,uEACFC,aACE,uEACFC,kBACE,8EACFC,aACE,sEACFC,YACE,6EACFC,WAAY,4DACZC,YACE,4EACFC,cACE,+DACFC,WACE,qEACFC,UACE,oEACFC,eACE,yEACFC,kBACE,6FACFC,WACE,mEACFC,aACE,mEACFC,gBACE,iEACF1C,WAAY,uBACZC,WAAY,uBACZ0C,UAAW,uBACXC,QAAS,6CACTC,QAAS,2CACTC,UAAW,+CACXC,QAAS,2CACTC,SAAU,KACVC,KAAM,IACNC,iBAAkB,EAClBC,eAAgB,EAChBC,SAAU,MACVC,YAAY,EACZC,cAAc,EACdC,eAAe,EACfC,UAAU,EACVC,WAAW,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","file":"static/js/main.afde86f0.chunk.js","sourcesContent":["const mockUser = {\n  login: \"tagaca19e\",\n  id: 56732160,\n  node_id: \"MDQ6VXNlcjU2NzMyMTYw\",\n  avatar_url:\n    \"https://avatars.githubusercontent.com/u/85138779?s=400&u=1670811a1d305a0d675464d0a960a304ab35d3ec&v=4\",\n  gravatar_id: \"\",\n  url: \"https://api.github.com/users/tagaca19e\",\n  html_url: \"https://github.com/tagaca19e\",\n  followers_url: \"https://api.github.com/users/tagaca19e/followers\",\n  following_url:\n    \"https://api.github.com/users/tagaca19e/following{/other_user}\",\n  gists_url: \"https://api.github.com/users/tagaca19e/gists{/gist_id}\",\n  starred_url: \"https://api.github.com/users/tagaca19e/starred{/owner}{/repo}\",\n  subscriptions_url: \"https://api.github.com/users/tagaca19e/subscriptions\",\n  organizations_url: \"https://api.github.com/users/tagaca19e/orgs\",\n  repos_url: \"https://api.github.com/users/tagaca19e/repos\",\n  events_url: \"https://api.github.com/users/tagaca19e/events{/privacy}\",\n  received_events_url: \"https://api.github.com/users/tagaca19e/received_events\",\n  type: \"User\",\n  site_admin: false,\n  name: \"thilak reddy\",\n  company: null,\n  blog: \"\",\n  location: null,\n  email: null,\n  hireable: null,\n  bio: null,\n  twitter_username: \"thilak_reddy_ch\",\n  public_repos: 3,\n  public_gists: 0,\n  followers: 0,\n  following: 0,\n  created_at: \"2019-10-18T15:00:43Z\",\n  updated_at: \"2020-12-28T09:38:38Z\",\n};\n\nexport default mockUser;\n","const mockRepos = [\n  {\n    id: 324060761,\n    node_id: \"MDEwOlJlcG9zaXRvcnkzMjQwNjA3NjE=\",\n    name: \"color-generator\",\n    full_name: \"tagaca19e/color-generator\",\n    private: false,\n    owner: {\n      login: \"thilak009\",\n      id: 56732160,\n      node_id: \"MDQ6VXNlcjU2NzMyMTYw\",\n      avatar_url:\n        \"https://avatars.githubusercontent.com/u/85138779?s=400&u=1670811a1d305a0d675464d0a960a304ab35d3ec&v=4\",\n      gravatar_id: \"\",\n      url: \"https://api.github.com/users/tagaca19e\",\n      html_url: \"https://github.com/tagaca19e\",\n      followers_url: \"https://api.github.com/users/thilak009/followers\",\n      following_url:\n        \"https://api.github.com/users/tagaca19e/following{/other_user}\",\n      gists_url: \"https://api.github.com/users/thilak009/gists{/gist_id}\",\n      starred_url:\n        \"https://api.github.com/users/thilak009/starred{/owner}{/repo}\",\n      subscriptions_url: \"https://api.github.com/users/thilak009/subscriptions\",\n      organizations_url: \"https://api.github.com/users/thilak009/orgs\",\n      repos_url: \"https://api.github.com/users/thilak009/repos\",\n      events_url: \"https://api.github.com/users/thilak009/events{/privacy}\",\n      received_events_url:\n        \"https://api.github.com/users/thilak009/received_events\",\n      type: \"User\",\n      site_admin: false,\n    },\n    html_url: \"https://github.com/thilak009/color-generator\",\n    description: null,\n    fork: false,\n    url: \"https://api.github.com/repos/thilak009/color-generator\",\n    forks_url: \"https://api.github.com/repos/thilak009/color-generator/forks\",\n    keys_url:\n      \"https://api.github.com/repos/thilak009/color-generator/keys{/key_id}\",\n    collaborators_url:\n      \"https://api.github.com/repos/thilak009/color-generator/collaborators{/collaborator}\",\n    teams_url: \"https://api.github.com/repos/thilak009/color-generator/teams\",\n    hooks_url: \"https://api.github.com/repos/thilak009/color-generator/hooks\",\n    issue_events_url:\n      \"https://api.github.com/repos/thilak009/color-generator/issues/events{/number}\",\n    events_url: \"https://api.github.com/repos/thilak009/color-generator/events\",\n    assignees_url:\n      \"https://api.github.com/repos/thilak009/color-generator/assignees{/user}\",\n    branches_url:\n      \"https://api.github.com/repos/thilak009/color-generator/branches{/branch}\",\n    tags_url: \"https://api.github.com/repos/thilak009/color-generator/tags\",\n    blobs_url:\n      \"https://api.github.com/repos/thilak009/color-generator/git/blobs{/sha}\",\n    git_tags_url:\n      \"https://api.github.com/repos/thilak009/color-generator/git/tags{/sha}\",\n    git_refs_url:\n      \"https://api.github.com/repos/thilak009/color-generator/git/refs{/sha}\",\n    trees_url:\n      \"https://api.github.com/repos/thilak009/color-generator/git/trees{/sha}\",\n    statuses_url:\n      \"https://api.github.com/repos/thilak009/color-generator/statuses/{sha}\",\n    languages_url:\n      \"https://api.github.com/repos/thilak009/color-generator/languages\",\n    stargazers_url:\n      \"https://api.github.com/repos/thilak009/color-generator/stargazers\",\n    contributors_url:\n      \"https://api.github.com/repos/thilak009/color-generator/contributors\",\n    subscribers_url:\n      \"https://api.github.com/repos/thilak009/color-generator/subscribers\",\n    subscription_url:\n      \"https://api.github.com/repos/thilak009/color-generator/subscription\",\n    commits_url:\n      \"https://api.github.com/repos/thilak009/color-generator/commits{/sha}\",\n    git_commits_url:\n      \"https://api.github.com/repos/thilak009/color-generator/git/commits{/sha}\",\n    comments_url:\n      \"https://api.github.com/repos/thilak009/color-generator/comments{/number}\",\n    issue_comment_url:\n      \"https://api.github.com/repos/thilak009/color-generator/issues/comments{/number}\",\n    contents_url:\n      \"https://api.github.com/repos/thilak009/color-generator/contents/{+path}\",\n    compare_url:\n      \"https://api.github.com/repos/thilak009/color-generator/compare/{base}...{head}\",\n    merges_url: \"https://api.github.com/repos/thilak009/color-generator/merges\",\n    archive_url:\n      \"https://api.github.com/repos/thilak009/color-generator/{archive_format}{/ref}\",\n    downloads_url:\n      \"https://api.github.com/repos/thilak009/color-generator/downloads\",\n    issues_url:\n      \"https://api.github.com/repos/thilak009/color-generator/issues{/number}\",\n    pulls_url:\n      \"https://api.github.com/repos/thilak009/color-generator/pulls{/number}\",\n    milestones_url:\n      \"https://api.github.com/repos/thilak009/color-generator/milestones{/number}\",\n    notifications_url:\n      \"https://api.github.com/repos/thilak009/color-generator/notifications{?since,all,participating}\",\n    labels_url:\n      \"https://api.github.com/repos/thilak009/color-generator/labels{/name}\",\n    releases_url:\n      \"https://api.github.com/repos/thilak009/color-generator/releases{/id}\",\n    deployments_url:\n      \"https://api.github.com/repos/thilak009/color-generator/deployments\",\n    created_at: \"2020-12-24T03:58:35Z\",\n    updated_at: \"2020-12-26T06:48:08Z\",\n    pushed_at: \"2020-12-24T04:26:09Z\",\n    git_url: \"git://github.com/thilak009/color-generator.git\",\n    ssh_url: \"git@github.com:thilak009/color-generator.git\",\n    clone_url: \"https://github.com/thilak009/color-generator.git\",\n    svn_url: \"https://github.com/thilak009/color-generator\",\n    homepage: null,\n    size: 169,\n    stargazers_count: 0,\n    watchers_count: 0,\n    language: \"CSS\",\n    has_issues: true,\n    has_projects: true,\n    has_downloads: true,\n    has_wiki: true,\n    has_pages: false,\n    forks_count: 0,\n    mirror_url: null,\n    archived: false,\n    disabled: false,\n    open_issues_count: 0,\n    license: null,\n    forks: 0,\n    open_issues: 0,\n    watchers: 0,\n    default_branch: \"main\",\n  },\n  {\n    id: 323541738,\n    node_id: \"MDEwOlJlcG9zaXRvcnkzMjM1NDE3Mzg=\",\n    name: \"git-task\",\n    full_name: \"thilak009/git-task\",\n    private: false,\n    owner: {\n      login: \"thilak009\",\n      id: 56732160,\n      node_id: \"MDQ6VXNlcjU2NzMyMTYw\",\n      avatar_url: \"https://avatars3.githubusercontent.com/u/56732160?v=4\",\n      gravatar_id: \"\",\n      url: \"https://api.github.com/users/thilak009\",\n      html_url: \"https://github.com/thilak009\",\n      followers_url: \"https://api.github.com/users/thilak009/followers\",\n      following_url:\n        \"https://api.github.com/users/thilak009/following{/other_user}\",\n      gists_url: \"https://api.github.com/users/thilak009/gists{/gist_id}\",\n      starred_url:\n        \"https://api.github.com/users/thilak009/starred{/owner}{/repo}\",\n      subscriptions_url: \"https://api.github.com/users/thilak009/subscriptions\",\n      organizations_url: \"https://api.github.com/users/thilak009/orgs\",\n      repos_url: \"https://api.github.com/users/thilak009/repos\",\n      events_url: \"https://api.github.com/users/thilak009/events{/privacy}\",\n      received_events_url:\n        \"https://api.github.com/users/thilak009/received_events\",\n      type: \"User\",\n      site_admin: false,\n    },\n    html_url: \"https://github.com/thilak009/git-task\",\n    description: null,\n    fork: true,\n    url: \"https://api.github.com/repos/thilak009/git-task\",\n    forks_url: \"https://api.github.com/repos/thilak009/git-task/forks\",\n    keys_url: \"https://api.github.com/repos/thilak009/git-task/keys{/key_id}\",\n    collaborators_url:\n      \"https://api.github.com/repos/thilak009/git-task/collaborators{/collaborator}\",\n    teams_url: \"https://api.github.com/repos/thilak009/git-task/teams\",\n    hooks_url: \"https://api.github.com/repos/thilak009/git-task/hooks\",\n    issue_events_url:\n      \"https://api.github.com/repos/thilak009/git-task/issues/events{/number}\",\n    events_url: \"https://api.github.com/repos/thilak009/git-task/events\",\n    assignees_url:\n      \"https://api.github.com/repos/thilak009/git-task/assignees{/user}\",\n    branches_url:\n      \"https://api.github.com/repos/thilak009/git-task/branches{/branch}\",\n    tags_url: \"https://api.github.com/repos/thilak009/git-task/tags\",\n    blobs_url:\n      \"https://api.github.com/repos/thilak009/git-task/git/blobs{/sha}\",\n    git_tags_url:\n      \"https://api.github.com/repos/thilak009/git-task/git/tags{/sha}\",\n    git_refs_url:\n      \"https://api.github.com/repos/thilak009/git-task/git/refs{/sha}\",\n    trees_url:\n      \"https://api.github.com/repos/thilak009/git-task/git/trees{/sha}\",\n    statuses_url:\n      \"https://api.github.com/repos/thilak009/git-task/statuses/{sha}\",\n    languages_url: \"https://api.github.com/repos/thilak009/git-task/languages\",\n    stargazers_url:\n      \"https://api.github.com/repos/thilak009/git-task/stargazers\",\n    contributors_url:\n      \"https://api.github.com/repos/thilak009/git-task/contributors\",\n    subscribers_url:\n      \"https://api.github.com/repos/thilak009/git-task/subscribers\",\n    subscription_url:\n      \"https://api.github.com/repos/thilak009/git-task/subscription\",\n    commits_url:\n      \"https://api.github.com/repos/thilak009/git-task/commits{/sha}\",\n    git_commits_url:\n      \"https://api.github.com/repos/thilak009/git-task/git/commits{/sha}\",\n    comments_url:\n      \"https://api.github.com/repos/thilak009/git-task/comments{/number}\",\n    issue_comment_url:\n      \"https://api.github.com/repos/thilak009/git-task/issues/comments{/number}\",\n    contents_url:\n      \"https://api.github.com/repos/thilak009/git-task/contents/{+path}\",\n    compare_url:\n      \"https://api.github.com/repos/thilak009/git-task/compare/{base}...{head}\",\n    merges_url: \"https://api.github.com/repos/thilak009/git-task/merges\",\n    archive_url:\n      \"https://api.github.com/repos/thilak009/git-task/{archive_format}{/ref}\",\n    downloads_url: \"https://api.github.com/repos/thilak009/git-task/downloads\",\n    issues_url:\n      \"https://api.github.com/repos/thilak009/git-task/issues{/number}\",\n    pulls_url: \"https://api.github.com/repos/thilak009/git-task/pulls{/number}\",\n    milestones_url:\n      \"https://api.github.com/repos/thilak009/git-task/milestones{/number}\",\n    notifications_url:\n      \"https://api.github.com/repos/thilak009/git-task/notifications{?since,all,participating}\",\n    labels_url: \"https://api.github.com/repos/thilak009/git-task/labels{/name}\",\n    releases_url:\n      \"https://api.github.com/repos/thilak009/git-task/releases{/id}\",\n    deployments_url:\n      \"https://api.github.com/repos/thilak009/git-task/deployments\",\n    created_at: \"2020-12-22T06:29:21Z\",\n    updated_at: \"2020-12-25T06:38:53Z\",\n    pushed_at: \"2020-12-25T06:38:50Z\",\n    git_url: \"git://github.com/thilak009/git-task.git\",\n    ssh_url: \"git@github.com:thilak009/git-task.git\",\n    clone_url: \"https://github.com/thilak009/git-task.git\",\n    svn_url: \"https://github.com/thilak009/git-task\",\n    homepage: null,\n    size: 0,\n    stargazers_count: 0,\n    watchers_count: 0,\n    language: null,\n    has_issues: false,\n    has_projects: true,\n    has_downloads: true,\n    has_wiki: true,\n    has_pages: false,\n    forks_count: 0,\n    mirror_url: null,\n    archived: false,\n    disabled: false,\n    open_issues_count: 0,\n    license: null,\n    forks: 0,\n    open_issues: 0,\n    watchers: 0,\n    default_branch: \"main\",\n  },\n  {\n    id: 324488983,\n    node_id: \"MDEwOlJlcG9zaXRvcnkzMjQ0ODg5ODM=\",\n    name: \"stripe-menu\",\n    full_name: \"thilak009/stripe-menu\",\n    private: false,\n    owner: {\n      login: \"thilak009\",\n      id: 56732160,\n      node_id: \"MDQ6VXNlcjU2NzMyMTYw\",\n      avatar_url: \"https://avatars3.githubusercontent.com/u/56732160?v=4\",\n      gravatar_id: \"\",\n      url: \"https://api.github.com/users/thilak009\",\n      html_url: \"https://github.com/thilak009\",\n      followers_url: \"https://api.github.com/users/thilak009/followers\",\n      following_url:\n        \"https://api.github.com/users/thilak009/following{/other_user}\",\n      gists_url: \"https://api.github.com/users/thilak009/gists{/gist_id}\",\n      starred_url:\n        \"https://api.github.com/users/thilak009/starred{/owner}{/repo}\",\n      subscriptions_url: \"https://api.github.com/users/thilak009/subscriptions\",\n      organizations_url: \"https://api.github.com/users/thilak009/orgs\",\n      repos_url: \"https://api.github.com/users/thilak009/repos\",\n      events_url: \"https://api.github.com/users/thilak009/events{/privacy}\",\n      received_events_url:\n        \"https://api.github.com/users/thilak009/received_events\",\n      type: \"User\",\n      site_admin: false,\n    },\n    html_url: \"https://github.com/thilak009/stripe-menu\",\n    description: null,\n    fork: false,\n    url: \"https://api.github.com/repos/thilak009/stripe-menu\",\n    forks_url: \"https://api.github.com/repos/thilak009/stripe-menu/forks\",\n    keys_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/keys{/key_id}\",\n    collaborators_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/collaborators{/collaborator}\",\n    teams_url: \"https://api.github.com/repos/thilak009/stripe-menu/teams\",\n    hooks_url: \"https://api.github.com/repos/thilak009/stripe-menu/hooks\",\n    issue_events_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/issues/events{/number}\",\n    events_url: \"https://api.github.com/repos/thilak009/stripe-menu/events\",\n    assignees_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/assignees{/user}\",\n    branches_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/branches{/branch}\",\n    tags_url: \"https://api.github.com/repos/thilak009/stripe-menu/tags\",\n    blobs_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/git/blobs{/sha}\",\n    git_tags_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/git/tags{/sha}\",\n    git_refs_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/git/refs{/sha}\",\n    trees_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/git/trees{/sha}\",\n    statuses_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/statuses/{sha}\",\n    languages_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/languages\",\n    stargazers_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/stargazers\",\n    contributors_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/contributors\",\n    subscribers_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/subscribers\",\n    subscription_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/subscription\",\n    commits_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/commits{/sha}\",\n    git_commits_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/git/commits{/sha}\",\n    comments_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/comments{/number}\",\n    issue_comment_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/issues/comments{/number}\",\n    contents_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/contents/{+path}\",\n    compare_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/compare/{base}...{head}\",\n    merges_url: \"https://api.github.com/repos/thilak009/stripe-menu/merges\",\n    archive_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/{archive_format}{/ref}\",\n    downloads_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/downloads\",\n    issues_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/issues{/number}\",\n    pulls_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/pulls{/number}\",\n    milestones_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/milestones{/number}\",\n    notifications_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/notifications{?since,all,participating}\",\n    labels_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/labels{/name}\",\n    releases_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/releases{/id}\",\n    deployments_url:\n      \"https://api.github.com/repos/thilak009/stripe-menu/deployments\",\n    created_at: \"2020-12-26T05:34:28Z\",\n    updated_at: \"2020-12-26T05:47:22Z\",\n    pushed_at: \"2020-12-26T05:47:19Z\",\n    git_url: \"git://github.com/thilak009/stripe-menu.git\",\n    ssh_url: \"git@github.com:thilak009/stripe-menu.git\",\n    clone_url: \"https://github.com/thilak009/stripe-menu.git\",\n    svn_url: \"https://github.com/thilak009/stripe-menu\",\n    homepage: null,\n    size: 243,\n    stargazers_count: 0,\n    watchers_count: 0,\n    language: \"CSS\",\n    has_issues: true,\n    has_projects: true,\n    has_downloads: true,\n    has_wiki: true,\n    has_pages: false,\n    forks_count: 0,\n    mirror_url: null,\n    archived: false,\n    disabled: false,\n    open_issues_count: 0,\n    license: null,\n    forks: 0,\n    open_issues: 0,\n    watchers: 0,\n    default_branch: \"main\",\n  },\n];\n\nexport default mockRepos;\n","const mockFollowers=[\n\n]\n\nexport default mockFollowers;","import React, { useState, useEffect } from \"react\";\nimport mockUser from \"./mockData.js/mockUser\";\nimport mockRepos from \"./mockData.js/mockRepos\";\nimport mockFollowers from \"./mockData.js/mockFollowers\";\nimport axios from \"axios\";\n\nconst rootUrl = \"https://api.github.com\";\n\nconst GithubContext = React.createContext();\n\nconst GithubProvider = ({ children }) => {\n  const [githubUser, setGithubUser] = useState(mockUser);\n  const [repos, setRepos] = useState(mockRepos);\n  const [followers, setFollowers] = useState(mockFollowers);\n  //request loading\n  const [requests, setRequests] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  //error\n  const [error, setError] = useState({ show: false, msg: \"\" });\n\n  const [chartColor, setChartColor] = useState(\"#ffffff\");\n  const [chartFontColor, setChartFontColor] = useState(\"#ffffff\");\n\n  const searchGithubUser = async (user) => {\n    toggleError();\n    setIsLoading(true);\n    const response = await axios(`${rootUrl}/users/${user}`).catch((err) =>\n      console.log(err)\n    );\n\n    if (response) {\n      setGithubUser(response.data);\n      const { login, followers_url } = response.data;\n\n      sessionStorage.setItem(\"user\", login);\n\n      await Promise.allSettled([\n        axios(`${rootUrl}/users/${login}/repos?per_page=100`),\n        axios(`${followers_url}?per_page=100`),\n      ])\n        .then((results) => {\n          const [repos, followers] = results;\n          const status = \"fulfilled\";\n          if (repos.status === status) {\n            setRepos(repos.value.data);\n          }\n          if (followers.status === status) {\n            setFollowers(followers.value.data);\n          }\n        })\n        .catch((err) => console.log(err));\n    } else {\n      toggleError(true, \"there is no user with that username\");\n    }\n    checkRequests();\n    setIsLoading(false);\n  };\n  //check rate\n  const checkRequests = () => {\n    axios(`${rootUrl}/rate_limit`)\n      .then(({ data }) => {\n        let {\n          rate: { remaining },\n        } = data;\n        setRequests(remaining);\n\n        if (remaining === 0) {\n          toggleError(true, \"sorry you exceeded the hourly limit\");\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  function toggleError(show = false, msg = \"\") {\n    setError({ show, msg });\n  }\n  //error\n  const fetchUser = async (user) => {\n    setIsLoading(true);\n    await Promise.allSettled([\n      axios(`${rootUrl}/users/${user}/repos?per_page=100`),\n      axios(`https://api.github.com/users/${user}/followers?per_page=100`),\n      axios(`${rootUrl}/users/${user}`),\n    ])\n      .then((results) => {\n        const [repos, followers, user] = results;\n        const status = \"fulfilled\";\n        if (repos.status === status) {\n          setRepos(repos.value.data);\n        }\n        if (followers.status === status) {\n          setFollowers(followers.value.data);\n        }\n        if (user.status === status) {\n          setGithubUser(user.value.data);\n        }\n      })\n      .catch((err) => console.log(err));\n    setIsLoading(false);\n  };\n  const defaultUser = () => {\n    const defaultUsername = \"tagaca19e\";\n    const username = sessionStorage.getItem(\"user\");\n    if (username) {\n      fetchUser(username);\n    } else {\n      fetchUser(defaultUsername);\n    }\n  };\n  useEffect(() => {\n    checkRequests();\n    defaultUser();\n  }, []);\n\n  return (\n    <GithubContext.Provider\n      value={{\n        githubUser,\n        repos,\n        followers,\n        requests,\n        error,\n        searchGithubUser,\n        isLoading,\n        chartColor,\n        setChartColor,\n        chartFontColor,\n        setChartFontColor,\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport { GithubProvider, GithubContext };\n","import React from 'react';\nimport { GithubContext } from '../context/context';\nimport styled from 'styled-components';\nimport { GoRepo, GoGist } from 'react-icons/go';\nimport { FiUsers, FiUserPlus } from 'react-icons/fi';\n\nconst UserInfo = () => {\n  const {githubUser}=React.useContext(GithubContext);\n  const {public_repos,followers,following,public_gists}=githubUser;\n  console.log(public_repos);\n  const items=[\n    {id:1,\n    icon:<GoRepo className=\"icon\"/>,\n    label:'repos',\n    value:public_repos,\n    color:'pink',\n    },\n    {id:2,\n      icon:<FiUsers className=\"icon\"/>,\n      label:'followers',\n      value:followers,\n      color:'green',\n    },\n    {id:3,\n      icon:<FiUserPlus className=\"icon\"/>,\n      label:'following',\n      value:following,\n      color:'purple',\n    },\n    {id:4,\n      icon:<GoGist className=\"icon\"/>,\n      label:'gists',\n      value:public_gists,\n      color:'yellow',\n      }\n  ]\n  return(\n    <section className=\"section\">\n      <Wrapper className=\"section-center\">\n        {\n          items.map((item)=>{\n            return <Item key={item.id} {...item}/>\n          })\n        }\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Item=({icon,label,color,value})=>{\n  return <article className=\"item\">\n    <span className={color}>{icon}</span>\n    <div>\n      <h3>{value}</h3>\n      <p>{label}</p>\n    </div>\n  </article>\n}\n\nconst Wrapper = styled.section`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem 2rem;\n  @media (min-width: 640px) {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n  .item {\n    border-radius: var(--radius);\n    padding: 1rem 2rem;\n    background: var(--clr-white);\n    display: grid;\n    grid-template-columns: auto 1fr;\n    column-gap: 3rem;\n    align-items: center;\n    span {\n      width: 3rem;\n      height: 3rem;\n      display: grid;\n      place-items: center;\n      border-radius: 50%;\n    }\n    .icon {\n      font-size: 1.5rem;\n    }\n    h3 {\n      margin-bottom: 0;\n      letter-spacing: 0;\n      color:var(--headings);\n    }\n    p {\n      margin-bottom: 0;\n      text-transform: capitalize;\n    }\n    .pink {\n      background: #ffe0f0;\n      color: #da4a91;\n    }\n    .green {\n      background: var(--clr-primary-10);\n      color: var(--clr-primary-5);\n    }\n    .purple {\n      background: #e6e6ff;\n      color: #5d55fa;\n    }\n    .yellow {\n      background: #fffbea;\n      color: #f0b429;\n    }\n  }\n`;\n\nexport default UserInfo;\n","// STEP 1 - Include Dependencies\n// Include react\nimport React, { useContext } from \"react\";\n\n// Include the react-fusioncharts component\nimport ReactFC from \"react-fusioncharts\";\n\n// Include the fusioncharts library\nimport FusionCharts from \"fusioncharts\";\n\n// Include the chart type\nimport Chart from \"fusioncharts/fusioncharts.charts\";\n\n// Include the theme as fusion\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n\nimport { GithubContext } from \"./../../context/context\";\n\n// Adding the chart and theme as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, Chart, FusionTheme);\n\n// STEP 2 - Chart Data\n\n// STEP 3 - Creating the JSON object to store the chart configurations\n\nconst ChartComponent = ({ data }) => {\n  const { chartColor, chartFontColor } = useContext(GithubContext);\n\n  const chartConfigs = {\n    type: \"column2d\", // The chart type\n    width: \"100%\", // Width of the chart\n    height: \"400\", // Height of the chart\n    dataFormat: \"json\", // Data type\n    dataSource: {\n      // Chart Configuration\n      chart: {\n        caption: \"Most Popular\",\n        captionFontColor: chartFontColor,\n        yAxisName: \"Stars\",\n        xAxisName: \"Repos\",\n        xAxisNameFontSize: \"16px\",\n        yAxisNameFontSize: \"16px\",\n        theme: \"fusion\",\n        bgColor: chartColor,\n        paletteColors: \"#FCBA04 ,#09814A, #0C6291, #FF5A5F, #7E1946\",\n      },\n      // Chart Data\n      data,\n    },\n  };\n  return <ReactFC {...chartConfigs} />;\n};\n// STEP 4 - Creating the DOM element to pass the react-fusioncharts component\n\nexport default ChartComponent;\n","// STEP 1 - Include Dependencies\n// Include react\nimport React, { useContext } from \"react\";\n\n// Include the react-fusioncharts component\nimport ReactFC from \"react-fusioncharts\";\n\n// Include the fusioncharts library\nimport FusionCharts from \"fusioncharts\";\n\n// Include the chart type\nimport Chart from \"fusioncharts/fusioncharts.charts\";\n\n// Include the theme as fusion\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n\nimport { GithubContext } from \"./../../context/context\";\n// Adding the chart and theme as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, Chart, FusionTheme);\n\n// STEP 2 - Chart Data\n\n// STEP 3 - Creating the JSON object to store the chart configurations\n\nconst ChartComponent = ({ data }) => {\n  const { chartColor, chartFontColor } = useContext(GithubContext);\n\n  const chartConfigs = {\n    type: \"mscolumn2d\", // The chart type\n    width: \"100%\", // Width of the chart\n    height: \"400\", // Height of the chart\n    dataFormat: \"json\", // Data type\n    dataSource: {\n      // Chart Configuration\n      chart: {\n        caption: \"Most Forked\",\n        captionFontColor: chartFontColor,\n        yAxisName: \"Forks\",\n        xAxisName: \"Repos\",\n        xAxisNameFontSize: \"16px\",\n        yAxisNameFontSize: \"16px\",\n        theme: \"fusion\",\n        bgColor: chartColor,\n        paletteColors: \"#FCBA04 ,#09814A, #0C6291, #FF5A5F, #7E1946\",\n      },\n      // Chart Data\n      data,\n    },\n  };\n  return <ReactFC {...chartConfigs} />;\n};\n// STEP 4 - Creating the DOM element to pass the react-fusioncharts component\n\nexport default ChartComponent;\n","// STEP 1 - Include Dependencies\n// Include react\nimport React,{useContext} from \"react\";\n\n// Include the react-fusioncharts component\nimport ReactFC from \"react-fusioncharts\";\n\n// Include the fusioncharts library\nimport FusionCharts from \"fusioncharts\";\n\n// Include the chart type\nimport Chart from \"fusioncharts/fusioncharts.charts\";\n\n// Include the theme as fusion\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n\nimport {GithubContext} from './../../context/context';\n\n// Adding the chart and theme as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, Chart, FusionTheme);\n\n// STEP 2 - Chart Data\n\n\n// STEP 3 - Creating the JSON object to store the chart configurations\n\n\nconst ChartComponent=({data})=>{\n  const {chartColor,chartFontColor}=useContext(GithubContext);\n\n  const chartConfigs = {\n    type: \"pie3d\", // The chart type\n    width: \"100%\", // Width of the chart\n    height: \"400\", // Height of the chart\n    dataFormat: \"json\", // Data type\n    dataSource: {\n      // Chart Configuration\n      chart: {\n       caption:'Languages',captionFontColor:chartFontColor,\n       theme:'fusion',\n       bgColor:chartColor,valueFontColor:chartFontColor,\n       pieRadius: '45%',\n       paletteColors:'#FCBA04 ,#09814A, #0C6291, #FF5A5F, #7E1946',\n      },\n      // Chart Data\n      data\n    }\n  };\n  return (<ReactFC {...chartConfigs} />);\n}\n// STEP 4 - Creating the DOM element to pass the react-fusioncharts component\n\n\nexport default ChartComponent;","// STEP 1 - Include Dependencies\n// Include react\nimport React,{useContext} from \"react\";\n\n// Include the react-fusioncharts component\nimport ReactFC from \"react-fusioncharts\";\n\n// Include the fusioncharts library\nimport FusionCharts from \"fusioncharts\";\n\n// Include the chart type\nimport Chart from \"fusioncharts/fusioncharts.charts\";\n\n// Include the theme as fusion\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n\nimport {GithubContext} from './../../context/context';\n\n// Adding the chart and theme as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, Chart, FusionTheme);\n\n// STEP 2 - Chart Data\n\n\n// STEP 3 - Creating the JSON object to store the chart configurations\n\n\nconst ChartComponent=({data})=>{\n  const {chartColor,chartFontColor}=useContext(GithubContext);\n\n  const chartConfigs = {\n    type: \"doughnut2d\", // The chart type\n    width: \"100%\", // Width of the chart\n    height: \"400\", // Height of the chart\n    dataFormat: \"json\", // Data type\n    dataSource: {\n      // Chart Configuration\n      chart: {\n       caption:'Stars per Language',captionFontColor:chartFontColor,\n       theme:'fusion',\n       bgColor:chartColor,\n       doughnutRadius: '45%',\n       showPercentValues:0,valueFontColor:chartFontColor,\n       paletteColors:'#FCBA04 ,#09814A, #0C6291, #FF5A5F, #7E1946',\n      },\n      // Chart Data\n      data\n    }\n  };\n  return (<ReactFC {...chartConfigs} />);\n}\n// STEP 4 - Creating the DOM element to pass the react-fusioncharts component\n\n\nexport default ChartComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { GithubContext } from \"../context/context\";\nimport { Pie3D, Column3D, Bar3D, Doughnut2D } from \"./Charts\";\n\nconst Repos = () => {\n  const { repos } = React.useContext(GithubContext);\n\n  const languages = repos.reduce((total, item) => {\n    const { language, stargazers_count } = item;\n    if (!language) return total;\n\n    if (!total[language]) {\n      total[language] = { label: language, value: 1, stars: stargazers_count };\n    } else {\n      total[language] = {\n        ...total[language],\n        value: total[language].value + 1,\n        stars: total[language].stars + stargazers_count,\n      };\n    }\n\n    return total;\n  }, {});\n\n  const mostUsed = Object.values(languages)\n    .sort((a, b) => {\n      return b.value - a.value;\n    })\n    .slice(0, 5);\n\n  //most stars per language\n\n  const mostPopular = Object.values(languages)\n    .sort((a, b) => {\n      return b.stars - a.stars;\n    })\n    .map((item) => {\n      return { ...item, value: item.stars };\n    })\n    .slice(0, 5);\n\n  //stars,forks\n\n  let { stars, forks } = repos.reduce(\n    (total, item) => {\n      const { stargazers_count, name, forks } = item;\n\n      total.stars[stargazers_count] = { label: name, value: stargazers_count };\n\n      total.forks[forks] = { label: name, value: forks };\n\n      return total;\n    },\n    {\n      stars: {},\n      forks: {},\n    }\n  );\n\n  stars = Object.values(stars).slice(-5).reverse();\n  forks = Object.values(forks).slice(-5).reverse();\n\n  return (\n    <section className=\"section\">\n      <Wrapper className=\"section-center\">\n        <Doughnut2D data={mostUsed}></Doughnut2D>\n        <Column3D data={stars}></Column3D>\n        <Doughnut2D data={mostPopular}></Doughnut2D>\n        <Bar3D data={forks}></Bar3D>\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\n\nexport default Repos;\n","import React from 'react';\nimport { GithubContext } from '../context/context';\nimport styled from 'styled-components';\nimport { MdBusiness, MdLocationOn, MdLink } from 'react-icons/md';\n\nconst Card = () => {\n  const {githubUser}=React.useContext(GithubContext);\n  const {avatar_url,html_url,name,company,blog,\n    bio,location,twitter_username}=githubUser;\n\n  return <Wrapper>\n    <header>\n      <img src={avatar_url} alt={name}/>\n      <div>\n        <h4>{name}</h4>\n        <p>{twitter_username?`@${twitter_username}`:\"\"}</p>\n      </div>\n      <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">Follow</a>\n    </header>\n    <p className=\"bio\">{bio}</p>\n    <div className=\"links\">\n      <p><MdBusiness></MdBusiness>{company}</p>\n      <p><MdLocationOn></MdLocationOn>{location}</p>\n      <a href={`${blog}`} target=\"_blank\" rel=\"noopener noreferrer\"><MdLink></MdLink>{blog}</a>\n    </div>\n  </Wrapper>;\n};\nconst Wrapper = styled.article`\n  background: var(--clr-white);\n  padding: 1.5rem 2rem;\n  border-top-right-radius: var(--radius);\n  border-bottom-left-radius: var(--radius);\n  border-bottom-right-radius: var(--radius);\n  position: relative;\n  &::before {\n    content: 'user';\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translateY(-100%);\n    background: var(--clr-white);\n    color: var(--clr-grey-5);\n    border-top-right-radius: var(--radius);\n    border-top-left-radius: var(--radius);\n    text-transform: capitalize;\n    padding: 0.5rem 1rem 0 1rem;\n    letter-spacing: var(--spacing);\n    font-size: 1rem;\n  }\n  header {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    align-items: center;\n    column-gap: 1rem;\n    margin-bottom: 1rem;\n    img {\n      width: 75px;\n      height: 75px;\n      border-radius: 50%;\n    }\n    h4 {\n      margin-bottom: 0.25rem;\n      color:var(--headings);\n    }\n    p {\n      margin-bottom: 0;\n    }\n    a {\n      color: var(--clr-primary-5);\n      border: 1px solid var(--clr-primary-5);\n      padding: 0.25rem 0.75rem;\n      border-radius: 1rem;\n      text-transform: capitalize;\n      letter-spacing: var(--spacing);\n      transition: var(--transition);\n      cursor: pointer;\n      &:hover {\n        background: var(--clr-primary-5);\n        color: var(--clr-white);\n      }\n    }\n  }\n  .bio {\n    color: var(--clr-grey-3);\n  }\n  .links {\n    p,\n    a {\n      margin-bottom: 0.25rem;\n      display: flex;\n      align-items: center;\n      svg {\n        margin-right: 0.5rem;\n        font-size: 1.3rem;\n      }\n    }\n    a {\n      color: var(--clr-primary-5);\n      transition: var(--transition);\n      svg {\n        color: var(--clr-grey-5);\n      }\n      &:hover {\n        color: var(--clr-primary-3);\n      }\n    }\n  }\n\n`;\nexport default Card;\n","import React from 'react';\nimport { GithubContext } from '../context/context';\nimport styled from 'styled-components';\n\nconst Followers = () => {\n  const {followers}=React.useContext(GithubContext);\n  //const {githubUser}=React.useContext(GithubContext);\n\n  return(\n    <Wrapper>\n      <div className=\"followers\">\n        {\n          followers.map((follower,index)=>{\n            const {avatar_url:img,html_url,login}=follower;\n            return <article key={index}>\n                <img src={img} alt={login}></img>\n                <div>\n                  <h4>{login}</h4>\n                  <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">{html_url}</a>\n                </div>\n            </article>\n          })\n        }\n      </div>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.article`\n  background: var(--clr-white);\n  border-top-right-radius: var(--radius);\n  border-bottom-left-radius: var(--radius);\n  border-bottom-right-radius: var(--radius);\n  position: relative;\n\n  &::before {\n    content: ' followers';\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translateY(-100%);\n    background: var(--clr-white);\n    color: var(--clr-grey-5);\n    border-top-right-radius: var(--radius);\n    border-top-left-radius: var(--radius);\n    text-transform: capitalize;\n    padding: 0.5rem 1rem 0 1rem;\n    letter-spacing: var(--spacing);\n    font-size: 1rem;\n  }\n  .followers {\n    overflow: scroll;\n    height: 260px;\n    display: grid;\n    grid-template-rows: repeat(auto-fill, minmax(45px, 1fr));\n    gap: 1.25rem 1rem;\n    padding: 1rem 2rem;\n  }\n  article {\n    transition: var(--transition);\n    padding: 0.15rem 0.5rem;\n    border-radius: var(--radius);\n    display: grid;\n    grid-template-columns: auto 1fr;\n    align-items: center;\n    column-gap: 1rem;\n    img {\n      height: 100%;\n      width: 45px;\n      border-radius: 50%;\n      object-fit: cover;\n    }\n    h4 {\n      margin-bottom: 0;\n      color:var(--headings);\n    }\n    a {\n      color: var(--clr-grey-5);\n    }\n  }\n\n`;\nexport default Followers;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Card from './Card';\nimport Followers from './Followers';\nconst User = () => {\n  return(\n    <section className=\"section\">\n      <Wrapper className=\"section-center\">\n        <Card></Card>\n        <Followers></Followers>\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Wrapper = styled.div`\n  padding-top: 2rem;\n  display: grid;\n  gap: 3rem 2rem;\n\n  @media (min-width: 992px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  /* align-items: start; */\n  \n`;\n\nexport default User;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MdSearch } from 'react-icons/md';\nimport { GithubContext } from '../context/context';\n\nconst Search = () => {\n  const [user,setUser]=React.useState('');\n  const {requests,error,searchGithubUser,isLoading}=React.useContext(GithubContext);\n  \n  \n  const handleSubmit=(e)=>{\n    e.preventDefault();\n    if(user){\n      //more logic\n      searchGithubUser(user);\n    }\n    console.log(user);\n  }\n  return(\n    <section className=\"section\">\n      <Wrapper className=\"section-center\">\n        {error.show && <ErrorWrapper>\n            <p>{error.msg}</p>\n          </ErrorWrapper>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-control\">\n            <MdSearch/>\n            <input type=\"text\" placeholder=\"enter github username\" value={user}onChange={(e)=> setUser(e.target.value)}></input>\n            {requests > 0 && !isLoading \n            && (<button type=\"submit\" className=\"\">Search</button>)}            \n          </div>\n        </form>\n        <h3>requests : {requests} / 60</h3>\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: grid;\n  gap: 1rem 1.75rem;\n  @media (min-width: 768px) {\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    h3 {\n      padding: 0 0.5rem;\n    }\n  }\n  .form-control {\n    background: var(--clr-white);\n    display: grid;\n    align-items: center;\n    grid-template-columns: auto 1fr auto;\n    column-gap: 0.5rem;\n    border-radius: 5px;\n    padding: 0.5rem;\n    input {\n      border-color: transparent;\n      outline-color: var(--clr-grey-10);\n      letter-spacing: var(--spacing);\n      color: var(--clr-grey-3);\n      padding: 0.25rem 0.5rem;\n      background:var(--clr-white);\n    }\n    input::placeholder {\n      color: var(--clr-grey-3);\n      text-transform: capitalize;\n      letter-spacing: var(--spacing);\n    }\n    button {\n      border-radius: 5px;\n      border-color: transparent;\n      padding: 0.25rem 0.5rem;\n      text-transform: capitalize;\n      letter-spacing: var(--spacing);\n      background: var(--clr-primary-5);\n      color: var(--clr-white);\n      transition: var(--transition);\n      cursor: pointer;\n      &:hover {\n        background: var(--clr-primary-8);\n        color: var(--clr-primary-1);\n      }\n    }\n\n    svg {\n      color: var(--clr-grey-5);\n    }\n    input,\n    button,\n    svg {\n      font-size: 1.3rem;\n    }\n    @media (max-width: 800px) {\n      button,\n      input,\n      svg {\n        font-size: 0.85rem;\n      }\n    }\n  }\n  h3 {\n    margin-bottom: 0;\n    color: var(--clr-grey-5);\n    font-weight: 400;\n  }\n`;\nconst ErrorWrapper = styled.article`\n  position: absolute;\n  width: 90vw;\n  top: 0;\n  left: 0;\n  transform: translateY(-100%);\n  text-transform: capitalize;\n  p {\n    color: red;\n    letter-spacing: var(--spacing);\n  }\n`;\nexport default Search;\n","import React from \"react\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nconst Navbar = ({ toggleTheme }) => {\n  return (\n    <div className=\"mynav\">\n      <h2></h2>\n      <FingerprintIcon />\n      {/* <button className=\"btn\" onClick={()=> toggleTheme()}>toggle</button> */}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Info, Repos, User, Search, Navbar } from \"../components\";\nimport loadingImage from \"../images/Loading.gif\";\nimport { GithubContext } from \"../context/context\";\n\nconst Dashboard = ({ toggleTheme }) => {\n  const { isLoading } = React.useContext(GithubContext);\n  if (isLoading) {\n    return <main></main>;\n  }\n  return (\n    <main>\n      <Navbar toggleTheme={toggleTheme}></Navbar>\n      <Search />\n      <Info />\n      <User />\n      <Repos />\n    </main>\n  );\n};\n\nexport default Dashboard;\n","export default __webpack_public_path__ + \"static/media/Loading.f26594c1.gif\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nconst Error = () => {\n  return <Wrapper>\n    <div>\n      <h1>404</h1>\n      <h3>sorry,page not found</h3>\n      <Link to=\"/\" className=\"btn\">Back Home</Link>\n    </div>\n  </Wrapper>;\n};\nconst Wrapper = styled.section`\n  min-height: 100vh;\n  display: grid;\n  place-items: center;\n  background: var(--clr-primary-10);\n  text-align: center;\n  h1 {\n    font-size: 10rem;\n  }\n  h3 {\n    color: var(--clr-grey-3);\n    margin-bottom: 1.5rem;\n  }\n`;\nexport default Error;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Dashboard, Error } from \"./pages\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { GithubContext } from \"./context/context\";\nimport PropagateLoader from \"react-spinners/FadeLoader\";\n\nconst getStorageTheme = () => {\n  let theme = \"light-theme\";\n  if (sessionStorage.getItem(\"theme\")) {\n    theme = sessionStorage.getItem(\"theme\");\n  } else {\n    theme = \"light-theme\";\n  }\n  return theme;\n};\n\nfunction App() {\n  const [loading, setloading] = useState(false);\n  useEffect(() => {\n    setloading(true);\n    setTimeout(() => {\n      setloading(false);\n    }, 1500);\n  }, []);\n  const [theme, setTheme] = useState(getStorageTheme());\n\n  const { setChartColor, setChartFontColor } = useContext(GithubContext);\n\n  const toggleTheme = () => {\n    if (theme === \"light-theme\") {\n      setTheme(\"dark-theme\");\n      setChartColor(\"#1a1a1a\");\n      setChartFontColor(\"#d6d6d6\");\n    } else {\n      setTheme(\"light-theme\");\n      setChartColor(\"#ffffff\");\n      setChartFontColor(\"#4f4f4f\");\n    }\n  };\n\n  useEffect(() => {\n    document.documentElement.className = theme;\n    sessionStorage.setItem(\"theme\", theme);\n    if (theme === \"light-theme\") {\n      setChartColor(\"#ffffff\");\n      setChartFontColor(\"#4f4f4f\");\n    } else {\n      setChartColor(\"#1a1a1a\");\n      setChartFontColor(\"#d6d6d6\");\n    }\n  }, [theme]);\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"clip\">\n          <PropagateLoader\n            color={\"#31d2f7\"}\n            loading={loading}\n            // css={override}\n            height={30}\n            width={22}\n            radius={10}\n            margin={35}\n            size={15}\n          />\n        </div>\n      ) : (\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact={true}>\n              <Dashboard toggleTheme={toggleTheme}></Dashboard>\n            </Route>\n            <Route path=\"*\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </Router>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { GithubProvider } from './context/context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GithubProvider>\n    <App />\n    </GithubProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}