[{"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\index.js":"1","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\App.js":"2","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\serviceWorker.js":"3","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\context\\context.js":"4","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\context\\mockData.js\\mockFollowers.js":"5","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\context\\mockData.js\\mockRepos.js":"6","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\context\\mockData.js\\mockUser.js":"7","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\pages\\index.js":"8","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\pages\\Dashboard.js":"9","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\pages\\Error.js":"10","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\index.js":"11","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Info.js":"12","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Repos.js":"13","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Search.js":"14","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\User.js":"15","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Navbar.js":"16","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Card.js":"17","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Followers.js":"18","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Charts\\index.js":"19","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Charts\\Pie3D.js":"20","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Charts\\Doughnut2d.js":"21","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Charts\\Column3D.js":"22","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Charts\\Bar3D.js":"23"},{"size":598,"mtime":1630895389441,"results":"24","hashOfConfig":"25"},{"size":2085,"mtime":1630897900184,"results":"26","hashOfConfig":"25"},{"size":5086,"mtime":1630895389443,"results":"27","hashOfConfig":"25"},{"size":3761,"mtime":1630896717740,"results":"28","hashOfConfig":"25"},{"size":55,"mtime":1630895389437,"results":"29","hashOfConfig":"25"},{"size":16635,"mtime":1630896638637,"results":"30","hashOfConfig":"25"},{"size":1361,"mtime":1630896812588,"results":"31","hashOfConfig":"25"},{"size":96,"mtime":1630895997626,"results":"32","hashOfConfig":"25"},{"size":526,"mtime":1630897188982,"results":"33","hashOfConfig":"25"},{"size":572,"mtime":1630895389442,"results":"34","hashOfConfig":"25"},{"size":192,"mtime":1630895389436,"results":"35","hashOfConfig":"25"},{"size":2469,"mtime":1630895389434,"results":"36","hashOfConfig":"25"},{"size":2273,"mtime":1630896200199,"results":"37","hashOfConfig":"25"},{"size":2903,"mtime":1630895389435,"results":"38","hashOfConfig":"25"},{"size":545,"mtime":1630895389436,"results":"39","hashOfConfig":"25"},{"size":334,"mtime":1630897732683,"results":"40","hashOfConfig":"25"},{"size":2740,"mtime":1630895389431,"results":"41","hashOfConfig":"25"},{"size":2050,"mtime":1630895389434,"results":"42","hashOfConfig":"25"},{"size":182,"mtime":1630895389434,"results":"43","hashOfConfig":"25"},{"size":1495,"mtime":1630895389433,"results":"44","hashOfConfig":"25"},{"size":1543,"mtime":1630895389433,"results":"45","hashOfConfig":"25"},{"size":1605,"mtime":1630896393829,"results":"46","hashOfConfig":"25"},{"size":1605,"mtime":1630896314965,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"llxpls",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\index.js",[],["100","101"],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\App.js",["102","103"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Dashboard, Error } from \"./pages\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { GithubContext } from \"./context/context\";\nimport PropagateLoader from \"react-spinners/FadeLoader\";\n\nconst getStorageTheme = () => {\n  let theme = \"light-theme\";\n  if (sessionStorage.getItem(\"theme\")) {\n    theme = sessionStorage.getItem(\"theme\");\n  } else {\n    theme = \"light-theme\";\n  }\n  return theme;\n};\n\nfunction App() {\n  const [loading, setloading] = useState(false);\n  useEffect(() => {\n    setloading(true);\n    setTimeout(() => {\n      setloading(false);\n    }, 1500);\n  }, []);\n  const [theme, setTheme] = useState(getStorageTheme());\n\n  const { setChartColor, setChartFontColor } = useContext(GithubContext);\n\n  const toggleTheme = () => {\n    if (theme === \"light-theme\") {\n      setTheme(\"dark-theme\");\n      setChartColor(\"#1a1a1a\");\n      setChartFontColor(\"#d6d6d6\");\n    } else {\n      setTheme(\"light-theme\");\n      setChartColor(\"#ffffff\");\n      setChartFontColor(\"#4f4f4f\");\n    }\n  };\n\n  useEffect(() => {\n    document.documentElement.className = theme;\n    sessionStorage.setItem(\"theme\", theme);\n    if (theme === \"light-theme\") {\n      setChartColor(\"#ffffff\");\n      setChartFontColor(\"#4f4f4f\");\n    } else {\n      setChartColor(\"#1a1a1a\");\n      setChartFontColor(\"#d6d6d6\");\n    }\n  }, [theme]);\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"clip\">\n          <PropagateLoader\n            color={\"#31d2f7\"}\n            loading={loading}\n            // css={override}\n            height={30}\n            width={22}\n            radius={10}\n            margin={35}\n            size={15}\n          />\n        </div>\n      ) : (\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact={true}>\n              <Dashboard toggleTheme={toggleTheme}></Dashboard>\n            </Route>\n            <Route path=\"*\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </Router>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\serviceWorker.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\context\\context.js",["104"],"import React, { useState, useEffect } from \"react\";\nimport mockUser from \"./mockData.js/mockUser\";\nimport mockRepos from \"./mockData.js/mockRepos\";\nimport mockFollowers from \"./mockData.js/mockFollowers\";\nimport axios from \"axios\";\n\nconst rootUrl = \"https://api.github.com\";\n\nconst GithubContext = React.createContext();\n\nconst GithubProvider = ({ children }) => {\n  const [githubUser, setGithubUser] = useState(mockUser);\n  const [repos, setRepos] = useState(mockRepos);\n  const [followers, setFollowers] = useState(mockFollowers);\n  //request loading\n  const [requests, setRequests] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  //error\n  const [error, setError] = useState({ show: false, msg: \"\" });\n\n  const [chartColor, setChartColor] = useState(\"#ffffff\");\n  const [chartFontColor, setChartFontColor] = useState(\"#ffffff\");\n\n  const searchGithubUser = async (user) => {\n    toggleError();\n    setIsLoading(true);\n    const response = await axios(`${rootUrl}/users/${user}`).catch((err) =>\n      console.log(err)\n    );\n\n    if (response) {\n      setGithubUser(response.data);\n      const { login, followers_url } = response.data;\n\n      sessionStorage.setItem(\"user\", login);\n\n      await Promise.allSettled([\n        axios(`${rootUrl}/users/${login}/repos?per_page=100`),\n        axios(`${followers_url}?per_page=100`),\n      ])\n        .then((results) => {\n          const [repos, followers] = results;\n          const status = \"fulfilled\";\n          if (repos.status === status) {\n            setRepos(repos.value.data);\n          }\n          if (followers.status === status) {\n            setFollowers(followers.value.data);\n          }\n        })\n        .catch((err) => console.log(err));\n    } else {\n      toggleError(true, \"there is no user with that username\");\n    }\n    checkRequests();\n    setIsLoading(false);\n  };\n  //check rate\n  const checkRequests = () => {\n    axios(`${rootUrl}/rate_limit`)\n      .then(({ data }) => {\n        let {\n          rate: { remaining },\n        } = data;\n        setRequests(remaining);\n\n        if (remaining === 0) {\n          toggleError(true, \"sorry you exceeded the hourly limit\");\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  function toggleError(show = false, msg = \"\") {\n    setError({ show, msg });\n  }\n  //error\n  const fetchUser = async (user) => {\n    setIsLoading(true);\n    await Promise.allSettled([\n      axios(`${rootUrl}/users/${user}/repos?per_page=100`),\n      axios(`https://api.github.com/users/${user}/followers?per_page=100`),\n      axios(`${rootUrl}/users/${user}`),\n    ])\n      .then((results) => {\n        const [repos, followers, user] = results;\n        const status = \"fulfilled\";\n        if (repos.status === status) {\n          setRepos(repos.value.data);\n        }\n        if (followers.status === status) {\n          setFollowers(followers.value.data);\n        }\n        if (user.status === status) {\n          setGithubUser(user.value.data);\n        }\n      })\n      .catch((err) => console.log(err));\n    setIsLoading(false);\n  };\n  const defaultUser = () => {\n    const defaultUsername = \"tagaca19e\";\n    const username = sessionStorage.getItem(\"user\");\n    if (username) {\n      fetchUser(username);\n    } else {\n      fetchUser(defaultUsername);\n    }\n  };\n  useEffect(() => {\n    checkRequests();\n    defaultUser();\n  }, []);\n\n  return (\n    <GithubContext.Provider\n      value={{\n        githubUser,\n        repos,\n        followers,\n        requests,\n        error,\n        searchGithubUser,\n        isLoading,\n        chartColor,\n        setChartColor,\n        chartFontColor,\n        setChartFontColor,\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport { GithubProvider, GithubContext };\n","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\context\\mockData.js\\mockFollowers.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\context\\mockData.js\\mockRepos.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\context\\mockData.js\\mockUser.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\pages\\index.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\pages\\Dashboard.js",["105"],"import React from \"react\";\nimport { Info, Repos, User, Search, Navbar } from \"../components\";\nimport loadingImage from \"../images/Loading.gif\";\nimport { GithubContext } from \"../context/context\";\n\nconst Dashboard = ({ toggleTheme }) => {\n  const { isLoading } = React.useContext(GithubContext);\n  if (isLoading) {\n    return <main></main>;\n  }\n  return (\n    <main>\n      <Navbar toggleTheme={toggleTheme}></Navbar>\n      <Search />\n      <Info />\n      <User />\n      <Repos />\n    </main>\n  );\n};\n\nexport default Dashboard;\n","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\pages\\Error.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\index.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Info.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Repos.js",["106"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { GithubContext } from \"../context/context\";\nimport { Pie3D, Column3D, Bar3D, Doughnut2D } from \"./Charts\";\n\nconst Repos = () => {\n  const { repos } = React.useContext(GithubContext);\n\n  const languages = repos.reduce((total, item) => {\n    const { language, stargazers_count } = item;\n    if (!language) return total;\n\n    if (!total[language]) {\n      total[language] = { label: language, value: 1, stars: stargazers_count };\n    } else {\n      total[language] = {\n        ...total[language],\n        value: total[language].value + 1,\n        stars: total[language].stars + stargazers_count,\n      };\n    }\n\n    return total;\n  }, {});\n\n  const mostUsed = Object.values(languages)\n    .sort((a, b) => {\n      return b.value - a.value;\n    })\n    .slice(0, 5);\n\n  //most stars per language\n\n  const mostPopular = Object.values(languages)\n    .sort((a, b) => {\n      return b.stars - a.stars;\n    })\n    .map((item) => {\n      return { ...item, value: item.stars };\n    })\n    .slice(0, 5);\n\n  //stars,forks\n\n  let { stars, forks } = repos.reduce(\n    (total, item) => {\n      const { stargazers_count, name, forks } = item;\n\n      total.stars[stargazers_count] = { label: name, value: stargazers_count };\n\n      total.forks[forks] = { label: name, value: forks };\n\n      return total;\n    },\n    {\n      stars: {},\n      forks: {},\n    }\n  );\n\n  stars = Object.values(stars).slice(-5).reverse();\n  forks = Object.values(forks).slice(-5).reverse();\n\n  return (\n    <section className=\"section\">\n      <Wrapper className=\"section-center\">\n        <Doughnut2D data={mostUsed}></Doughnut2D>\n        <Column3D data={stars}></Column3D>\n        <Doughnut2D data={mostPopular}></Doughnut2D>\n        <Bar3D data={forks}></Bar3D>\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\n\nexport default Repos;\n","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Search.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\User.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Navbar.js",["107"],"import React from \"react\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nconst Navbar = ({ toggleTheme }) => {\n  return (\n    <div className=\"mynav\">\n      <h2></h2>\n      <FingerprintIcon />\n      {/* <button className=\"btn\" onClick={()=> toggleTheme()}>toggle</button> */}\n    </div>\n  );\n};\n\nexport default Navbar;\n","C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Card.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Followers.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Charts\\index.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Charts\\Pie3D.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Charts\\Doughnut2d.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Charts\\Column3D.js",[],"C:\\Users\\Eidmone\\Desktop\\searchapp\\github-users-search\\src\\components\\Charts\\Bar3D.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":2,"column":21,"nodeType":"114","messageId":"115","endLine":2,"endColumn":26},{"ruleId":"116","severity":1,"message":"117","line":51,"column":6,"nodeType":"118","endLine":51,"endColumn":13,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":113,"column":6,"nodeType":"118","endLine":113,"endColumn":8,"suggestions":"121"},{"ruleId":"112","severity":1,"message":"122","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":20},{"ruleId":"112","severity":1,"message":"123","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":6,"column":7,"nodeType":"126","endLine":6,"endColumn":11},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Error' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setChartColor' and 'setChartFontColor'. Either include them or remove the dependency array.","ArrayExpression",["129"],"React Hook useEffect has missing dependencies: 'checkRequests' and 'defaultUser'. Either include them or remove the dependency array.",["130"],"'loadingImage' is defined but never used.","'Pie3D' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [setChartColor, setChartFontColor, theme]",{"range":"135","text":"136"},"Update the dependencies array to be: [checkRequests, defaultUser]",{"range":"137","text":"138"},[1408,1415],"[setChartColor, setChartFontColor, theme]",[3362,3364],"[checkRequests, defaultUser]"]